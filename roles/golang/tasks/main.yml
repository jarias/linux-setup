---
- name: Register the current Go version (if any)
  shell: /usr/local/go/bin/go version | cut -d ' ' -f3 | sed 's/go\(.*\)/\1/'
  ignore_errors: yes
  register: go_version
  changed_when: false

- name: Remove old installation of Go
  file:
    path: /usr/local/go
    state: absent
  become: yes
  when: go_version|failed or go_version.stdout != go_version_target

- name: Install Go
  unarchive:
    src: "https://storage.googleapis.com/golang/go{{ go_version_target }}.linux-amd64.tar.gz"
    dest: /usr/local
    remote_src: yes
  become: yes
  when: go_version|failed or go_version.stdout != go_version_target

- name: Create GOPATH dir
  file:
    path: "~/go"
    state: directory

- name: Install default Go packages
  shell: "GOPATH=~/go go get -u {{ item.package }}"
  with_items:
    - { package: golang.org/x/tools/cmd/gotype }
    - { package: golang.org/x/tools/cmd/goimports }
    - { package: golang.org/x/tools/cmd/cover }
    - { package: golang.org/x/tools/cmd/guru }
    - { package: golang.org/x/tools/cmd/gorename }
    - { package: github.com/nsf/gocode }
    - { package: github.com/alecthomas/gometalinter }
    - { package: github.com/golang/lint/golint }
    - { package: github.com/rogpeppe/godef }
    - { package: github.com/kisielk/errcheck }
    - { package: github.com/jstemmer/gotags }
    - { package: github.com/klauspost/asmfmt/cmd/asmfmt }
    - { package: github.com/fatih/motion }
    - { package: github.com/zmb3/gogetdoc }
    - { package: github.com/josharian/impl }
    - { package: github.com/constabulary/gb/... }

